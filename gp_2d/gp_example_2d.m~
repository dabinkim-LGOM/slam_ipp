load ground_truth_2d.mat

%% Hyperparameter training %%
train_hyperparameters = 1;

% Training data.
X_train = mesh;
Y_train = ground_truth;

% Number of sample points in Gauss Hermite quadrature.
N_gauss = 11;
% Uncertainty on input.
S2X = diag([0.6^2, 0.6^2]);

% GP hyperparameters.
mean_func = {@meanConst};
inf_func = {@infExact};
cov_func = {@covSEiso};
cov_func_UI = {@covUI, cov_func, N_gauss, S2X};
lik_func = @likGauss; sn = 0.1; hyp.lik = log(sn);

if (train_hyperparameters)
    hyp.cov = [0; 0];
    hyp.lik = log(0.1);
    hyp.mean = 25.5421;
    hyp_trained = ...
        minimize(hyp, @gp, -200, inf_func, mean_func, ...
        cov_func, lik_func, X_train, Y_train);
    
    %hyp_trained_UI = ...
    %    minimize(hyp, @gp, -200, inf_func, mean_func, ...
    %    cov_func_UI, lik_func, X_train, Y_train);
end

%% GP Regression %%
X_predict = X_train;
test_ind = datasample(1:size(X_predict,1),3);
X_test = X_train(test_ind,:);
Y_test = Y_train(test_ind);

% ymu, ys: mean and covariance for output
% fmu, fs: mean and covariance for latent variables
% post: struct representation of the (approximate) posterior

% With certain input.
[ymu1, ys1, fmu1, fs1, ~ , post1] = ...
    gp(hyp_trained, inf_func, mean_func, cov_func, lik_func, ...
    X_test, Y_test, X_predict);
Y_predict = ymu;

% With uncertain input.
[ymu2, ys2, fmu2, fs2, ~ , post2] = ...
    gp(hyp_trained, inf_func, mean_func, cov_func_UI, lik_func, ...
    X_test, Y_test, X_predict);


%% Plotting %%
subplot(3,2,1)
scatter(X_train(:,1), X_train(:,2), 100, Y_train, 'filled');
title('Training data (GT)')
xlabel('x')
ylabel('y')
zlabel('z')
caxis([0 45])
subplot(3,2,2)
scatter(X_test(:,1), X_test(:,2), 100, Y_test, 'filled');
title('Test (input)')
xlabel('x')
ylabel('y')
zlabel('z')
caxis([0 45])
subplot(3,2,3)
scatter(X_predict(:,1), X_predict(:,2), 100, ymu1, 'filled');
title('Prediction')
xlabel('x')
ylabel('y')
zlabel('z')
caxis([0 45])
subplot(3,2,4)
scatter(X_predict(:,1), X_predict(:,2), 100, ys1, 'filled');
title('Variance')
xlabel('x')
ylabel('y')
zlabel('z')
scatter(X_predict(:,1), X_predict(:,2), 100, ymu2, 'filled');
title('Prediction')
xlabel('x')
ylabel('y')
zlabel('z')
caxis([0 45])
subplot(3,2,6)
scatter(X_predict(:,1), X_predict(:,2), 100, ys2, 'filled');
title('Variance')
xlabel('x')
ylabel('y')
zlabel('z')

set(gcf, 'Position', [224, 639, 1021, 332]);